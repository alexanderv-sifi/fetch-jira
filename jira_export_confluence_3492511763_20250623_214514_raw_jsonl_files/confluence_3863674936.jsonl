{"id": "confluence_3863674936", "title": "GitHub Enterprise", "content": "This guide will be used for using/accessing Github and Service Account usage in Github. GitHub Account To gain access into Simplifi’s github organization, you will need to already have a Github account in place. Digital Workplace doesnt typically handle the creation of the actual Github account, only the access that is needed once the account is in place. This is because a high majority of users already have an account and we can easily assign / unassign access with those accounts. If you already have a Github account, Skip to Step 3 in the Create an account section. Create an Account. If we assist in the account creation, typically we recommend using this format. firstNameLastName-simpli and use your current simplifi email address. Once you have created your personal account, you have to enable 2FA to your account. Typically, this is done with Google Authenticator. (This account access is separate from Okta, because this is technically a ‘personal’ account into Github itself) Once you have your account setup, you need to request access through the Okta access request system. https://simplifi.atlassian.net/l/cp/juu4yF42 You should receive an invite that will add your user account to the Simplifi Github Organization. Accessing Simplifi’s GitHub Org. Under your profile you should see in your organizations the green Simplifi logo. To gain access into this org, you WILL be required to authenticate with your Okta credentials. If you receive an error, or a message informing you that you hve not been assigned this application, please go through the access request option above in Step 3. Service Account Access Service account access works the same way as a personal account access would. - Log in to the Github account with 2FA to authenticate against GitHubs tenant. - Authenticate against Okta to gain access into our Simplifi Organization. Steps to log in with a SA. You will need to have Bitwarden access with access to the Github and/or Infrastructure vaults. If you do not have access to Bitwarden, please refer to Step 3 from above to request access. In the vault, you should see the Github account information that logs you into Github itself. Here you will have the username/pw and Authentication Code(TOTP) to get logged in. Once logged into Github, you will also have to authenticate with Okta to get into the Org. These typically have the Github-Okta naming convention as shown below. This will give you the same information as above to get authenticated via Okta. username/password and Authentication Code(TOTP) ReAuthenticating Personal account keys with SAML. If you have created any personal account keys, whether its your own account or a service account. You will need to resynch your keys to the new SAML login. This information can be located here in Githubs documentation. https://docs.github.com/en/enterprise-cloud@latest/authentication/authenticating-with-saml-single-sign-on/authorizing-a-personal-access-token-for-use-with-saml-single-sign-on SSH Keys https://docs.github.com/en/enterprise-cloud@latest/authentication/authenticating-wit[…]gn-on/authorizing-an-ssh-key-for-use-with-saml-single-sign-on Administration: To remove an external user from GitHub, follow these steps: Click on the three dots next to the Outside Collaborator. Remove the external user from all repositories associated with your GitHub account.\n\nChild Pages:\n- 2FA for Service Accounts in GitHub (ID: 3985735950) - How to enable 2FA (aka MFA) for service accounts in GitHub\n", "url": "https://simplifi.atlassian.net/wiki/spaces/DW/pages/3863674936/GitHub+Enterprise", "metadata": {"source": "confluence", "space": "DW", "space_name": "Digital Workplace Solutions", "page_id": "3863674936", "version": 4, "last_modified": "2024-07-24T17:47:21.423Z", "author": "Bill Price", "ancestors": [{"id": "3473048177", "title": "Digital Workplace Solutions", "type": "page"}, {"id": "3492511763", "title": "Simplifi Employee Technical Guides", "type": "page"}], "child_count": 1, "permissions": {"read_restrictions": {"users": [], "groups": []}, "update_restrictions": {"users": [], "groups": []}, "is_restricted": false}, "is_restricted": false}}
